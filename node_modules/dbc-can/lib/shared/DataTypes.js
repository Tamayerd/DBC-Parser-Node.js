"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computeDataType = void 0;
const computeDataType = (numOfBits, isSigned, isFloat = false) => {
    if (numOfBits === 64 && isFloat) {
        return 'double';
    }
    else if (numOfBits === 32 && isFloat) {
        return 'float';
    }
    if (numOfBits <= 8) {
        if (!isSigned) {
            return 'uint8';
        }
        return 'int8';
    }
    else if (numOfBits <= 16) {
        if (!isSigned) {
            return 'uint16';
        }
        return 'int16';
    }
    else if (numOfBits <= 32) {
        if (!isSigned) {
            return 'uint32';
        }
        return 'int32';
    }
    else if (numOfBits <= 64) {
        if (!isSigned) {
            return 'uint64';
        }
        return 'int64';
    }
    else if (numOfBits > 64) {
        throw new Error(`Number of bits ${numOfBits} exceeds maximum possible data type`);
    }
    else {
        throw new Error(`Could not compute data type from inputs: bits ->${numOfBits} signed-> ${isSigned} float ->${isFloat}`);
    }
};
exports.computeDataType = computeDataType;
//# sourceMappingURL=DataTypes.js.map